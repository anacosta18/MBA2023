ggplotly(
ggplot(masterdf, aes(x=year, y=co2_emissions))+
geom_point(stat='summary', fun=sum, size=1)+
geom_line(stat='summary', fun=sum, size=0.4)+
labs(title = "Emissões de CO2 por ano - Global ",
x = "Ano",
y = "Emissões de CO2 (MtonCO2)",
colour = NULL)+
theme_minimal()
)
ggplotly(
ggplot(masterdf, aes(x=year, y=gpd_dolar, colour= region))+
geom_point(stat='summary', fun=sum, size=1)+
geom_line(stat='summary', fun=sum, size=0.4)+
labs(title = "Produto interno bruto por ano - regiões do Globo",
x = "Ano",
y = "Produto Interno Bruto (em bilhões de dólares)",
colour = NULL)+
theme_minimal()
)
ggplotly(
ggplot(masterdf, aes(x=year, y=pop_pop_million, colour= region))+
geom_point(stat='summary', fun=sum, size=1)+
geom_line(stat='summary', fun=sum, size=0.4)+
labs(title = "População  - regiões do Globo",
x = "Ano",
y = "População (em milhões de pessoas)",
colour = NULL)+
theme_minimal()
)
ggplotly(
ggplot(masterdf, aes(x=year, y=co2percapita, colour= region))+
geom_point(stat='summary', fun=sum, size=1)+
geom_line(stat='summary', fun=sum, size=0.4)+
labs(title = "Emissões de CO2 por ano - regiões do Globo",
x = "Ano",
y = "Emissões de CO2 (MtonCO2",
colour = NULL)+
theme_minimal()
)
ggplotly(
ggplot(masterdf, aes(x=pop_pop_million, y=co2_emissions))+
geom_point(stat='summary', fun=sum, size=1)+
geom_line(stat='summary', fun=sum, size=0.4)+
labs(title = "Emissões de CO2 por ano - Global ",
x = "Ano",
y = "Emissões de CO2 (MtonCO2)",
colour = NULL)+
theme_minimal()
)
ggplotly(
ggplot(masterdf)+
geom_point(x = year, y = co2_emission, stat='summary', fun=sum, size=1)+
geom_line(stat='summary', fun=sum, size=0.4)+
labs(title = "Emissões de CO2 por ano - Global ",
x = "Ano",
y = "Emissões de CO2 (MtonCO2)",
colour = NULL)+
theme_minimal()
)
ggplotly(
ggplot(masterdf)+
geom_point(x = year, y = co2_emissions, stat='summary', fun=sum, size=1)+
geom_line(stat='summary', fun=sum, size=0.4)+
labs(title = "Emissões de CO2 por ano - Global ",
x = "Ano",
y = "Emissões de CO2 (MtonCO2)",
colour = NULL)+
theme_minimal()
)
View(masterdf)
ggplotly(
ggplot(masterdf)+
geom_point(x = year, y =co2_emissions, stat='summary', fun=sum, size=1)+
geom_line(stat='summary', fun=sum, size=0.4)+
labs(title = "Emissões de CO2 por ano - Global ",
x = "Ano",
y = "Emissões de CO2 (MtonCO2)",
colour = NULL)+
theme_minimal()
)
ggplotly(
ggplot()+
geom_point(masterdf, x = year, y =co2_emissions, stat='summary', fun=sum, size=1)+
geom_line(stat='summary', fun=sum, size=0.4)+
labs(title = "Emissões de CO2 por ano - Global ",
x = "Ano",
y = "Emissões de CO2 (MtonCO2)",
colour = NULL)+
theme_minimal()
)
ggplotly(
ggplot()+
geom_point(masterdf, x = year, y =co2_emissions, stat='summary', fun=sum, size=1)+
geom_line(stat='summary', fun=sum, size=0.4)+
labs(title = "Emissões de CO2 por ano - Global ",
x = "Ano",
y = "Emissões de CO2 (MtonCO2)",
colour = NULL)+
theme_minimal()
)
masterdf
header(masterdf)
glimpse(masterdf)
ggplotly(
ggplot()+
geom_point(masterdf, x = year, y =co2_emissions, stat='summary', fun=sum, size=1)+
geom_line(stat='summary', fun=sum, size=0.4)+
labs(title = "Emissões de CO2 por ano - Global ",
x = "Ano",
y = "Emissões de CO2 (MtonCO2)",
colour = NULL)+
theme_minimal()
)
ggplotly(
ggplot(masterdf, x= year)+
geom_point(y =co2_emissions, stat='summary', fun=sum, size=1)+
geom_line(stat='summary', fun=sum, size=0.4)+
labs(title = "Emissões de CO2 por ano - Global ",
x = "Ano",
y = "Emissões de CO2 (MtonCO2)",
colour = NULL)+
theme_minimal()
)
ggplotly(
ggplotly(
ggplot()+
geom_point(masterdf, aes(x=year, y =co2_emissions), stat='summary', fun=sum, size=1)+
geom_line(stat='summary', fun=sum, size=0.4)+
labs(title = "Emissões de CO2 por ano - Global ",
x = "Ano",
y = "Emissões de CO2 (MtonCO2)",
colour = NULL)+
theme_minimal()
)
ggplotly(
ggplotly(
ggplot()+
geom_point(masterdf, aes(x=year, y =co2_emissions), stat='summary', fun=sum, size=1)+
labs(title = "Emissões de CO2 por ano - Global ",
x = "Ano",
y = "Emissões de CO2 (MtonCO2)",
colour = NULL)+
theme_minimal()
)
ggplotly(
ggplot(masterdf, aes(x=year, y=co2_emissions))+
geom_point(stat='summary', fun=sum, size=1)+
geom_line(stat='summary', fun=sum, size=0.4)+
labs(title = "Emissões de CO2 por ano - Global ",
x = "Ano",
y = "Emissões de CO2 (MtonCO2)",
colour = NULL)+
theme_minimal()
)
ggplotly(
ggplot(masterdf, aes(x=year, y=pop_pop_million))+
geom_point(stat='summary', fun=sum, size=1)+
geom_line(stat='summary', fun=sum, size=0.4)+
labs(title = "População - Global ",
x = "Ano",
y = "População (milhões))",
colour = NULL)+
theme_minimal()
)
ggplotly(
ggplot(masterdf, aes(x=year, y=co2percapita))+
geom_point(stat='summary', fun=sum, size=1)+
geom_line(stat='summary', fun=sum, size=0.4)+
labs(title = "População - Global ",
x = "Ano",
y = "População (milhões))",
colour = NULL)+
theme_minimal()
)
ggplotly(
ggplot(masterdf, aes(x=year, y=co2pergpd))+
geom_point(stat='summary', fun=sum, size=1)+
geom_line(stat='summary', fun=sum, size=0.4)+
labs(title = "População - Global ",
x = "Ano",
y = "População (milhões))",
colour = NULL)+
theme_minimal()
)
ggplotly(
ggplot(masterdf, aes(x=year, y=pop_pop_million, colour= region))+
geom_point(stat='summary', fun=sum, size=1)+
geom_line(stat='summary', fun=sum, size=0.4)+
labs(title = "População  - regiões do Globo",
x = "Ano",
y = "População (em milhões de pessoas)",
colour = NULL)+
theme_minimal()
)
masterdf <- masterdf %>% select(year,country,country_name, region, everything())
masterdf<- masterdf %>% select (-country_name)
masterdf<- masterdf %>% select (-pop_variant)
summary(masterdf)
d2019<-masterdf%>%
filter(year == 2019)
glimpse(d2019)
chart.Correlation(d2019[,10:18], histogram = TRUE)
glimpse(d2019)
chart.Correlation(d2019[,8:18], histogram = TRUE)
ggplotly(
masterdf%>%
filter(region == "Asia")%>%
ggplot(aes(x=year, y=co2_emissions, colour= country))+
geom_point(stat='summary', fun=sum, size=1)+
geom_line(stat='summary', fun=sum, size=0.4)+
labs(title = "Emissões de CO2 por ano - ",
x = "Ano",
y = "Emissões de CO2 (MtonCO2)",
colour = NULL)+
theme_minimal()
)
## --------------------visões por ano, por região
ggplotly(
ggplot(masterdf, aes(x=year, y=co2_emissions, colour= region))+
geom_point(stat='summary', fun=sum, size=1)+
geom_line(stat='summary', fun=sum, size=0.4)+
labs(title = "Emissões de CO2 por ano - regiões do Globo",
x = "Ano",
y = "Emissões de CO2 (MtonCO2)",
colour = NULL)+
theme_minimal()
)
ggplotly(
masterdf%>%
filter(region == "Asia")%>%
ggplot(aes(x=year, y=co2_emissions, colour= country))+
geom_point(stat='summary', fun=sum, size=1)+
geom_line(stat='summary', fun=sum, size=0.4)+
labs(title = "Emissões de CO2 por ano - ",
x = "Ano",
y = "Emissões de CO2 (MtonCO2)",
colour = NULL)+
theme_minimal()
)
ggplotly(
ggplot(masterdf, aes(x=year, y=co2_emissions))+
geom_point(stat='summary', fun=sum, size=1)+
geom_line(stat='summary', fun=sum, size=0.4)+
labs(title = "Emissões de CO2 por ano - Global ",
x = "Ano",
y = "Emissões de CO2 (MtonCO2)",
colour = NULL)+
theme_minimal()
)
ggplotly(
ggplot(masterdf, aes(x=year, y=pop_pop_million))+
geom_point(stat='summary', fun=sum, size=1)+
geom_line(stat='summary', fun=sum, size=0.4)+
labs(title = "População - Global ",
x = "Ano",
y = "População (milhões))",
colour = NULL)+
theme_minimal()
)
ggplotly(
masterdf%>%
group_by(year)%>%
ggplot(aes(x=pop_pop_million, y = co2_emissions))
)
ggplotly(
masterdf%>%
group_by(year)%>%
ggplot(aes(x=pop_pop_million, y = co2_emissions))
)
ggplotly(
masterdf%>%
group_by(year)%>%
ggplot(aes(x=pop_pop_million, y = co2_emissions))+
geom_point(size=1)
)
library(readxl)
ndc <- read_excel("IGES+NDC+Database_v7.7 (1) - Copia.xlsx",
sheet = "NDC_Master_Sheet_TCCAna", col_types = c("text",
"text", "text", "numeric", "numeric",
"text", "text", "numeric", "numeric",
"text", "numeric", "numeric", "numeric",
"numeric", "numeric", "text", "text",
"text", "text", "text", "text", "text",
"text"))
View(ndc)
pacotes <- c("readxl", "plyr","nc","dplyr", "ggplot2","plotly","tidyverse","reshape2","knitr","kableExtra",
"nlme","lmtest","fastDummies","msm","lmeInfo","jtools","gganimate",
"ggridges","viridis","hrbrthemes","PerformanceAnalytics", "cowplot")
if(sum(as.numeric(!pacotes %in% installed.packages())) != 0){
instalador <- pacotes[!pacotes %in% installed.packages()]
for(i in 1:length(instalador)) {
install.packages(instalador, dependencies = T)
break()}
sapply(pacotes, require, character = T)
} else {
sapply(pacotes, require, character = T)
}
hist_kyoto <- histogram(ndc$kyoto_status)
hist_kyoto <- hist(ndc$kyoto_status)
pacotes <- c("readxl", "plyr","nc","dplyr", "ggplot2","plotly","tidyverse","reshape2","knitr","kableExtra",
"nlme","lmtest","fastDummies","msm","lmeInfo","jtools","gganimate",
"ggridges","viridis","hrbrthemes","PerformanceAnalytics", "cowplot","epiDisplay")
if(sum(as.numeric(!pacotes %in% installed.packages())) != 0){
instalador <- pacotes[!pacotes %in% installed.packages()]
for(i in 1:length(instalador)) {
install.packages(instalador, dependencies = T)
break()}
sapply(pacotes, require, character = T)
} else {
sapply(pacotes, require, character = T)
}
tab1(ndc$kyoto_status)
tab1(ndc$kyoto_status, sort.group = "decreasing")
kyoto <- tab1(ndc$kyoto_status, sort.group = "decreasing")
paris <- tab1(ndc$paris_ag_status, sort.group = "decreasing")
View(ndc)
paris_2<-tab1(ndc$paris_ag_ratification_year)
kyoto <- tab1(ndc$kyoto_status, sort.group = "decreasing", xlab = "Status", ylab = "Número de paises", main = NULL)
kyoto <- tab1(ndc$kyoto_status, sort.group = "decreasing", xlab = "Status", ylab = "Número de paises", main = NULL)
kyoto
tab1(ndc$kyoto_status, sort.group = "decreasing", xlab = "Status", ylab = "Número de paises", main = NULL)
tab1(ndc$kyoto_status, sort.group = "decreasing", xlab = "Status", ylab = "Número de paises", main = NULL)
paris <- tab1(ndc$paris_ag_status, sort.group = "decreasing")
kyoto <- tab1(ndc$kyoto_status, sort.group = "decreasing", xlab = "Status", ylab = "Número de paises", main = NULL)
kyoto <- tab1(ndc$kyoto_status, sort.group = "decreasing", xlab = "Status", ylab = "Número de paises", main = "Status- Protocolo de Kyoto")
paris <- tab1(ndc$paris_ag_status, sort.group = "decreasing", xlab = "Status", ylab = "Número de paises", main = "Status- Acordo de Paris"))
paris <- tab1(ndc$paris_ag_status, sort.group = "decreasing", xlab = "Status", ylab = "Número de paises", main = "Status- Acordo de Paris")
paris_2<-tab1(ndc$paris_ag_ratification_year)
paris_2<-tab1(ndc$paris_ag_ratification_year,  sort.group = "decreasing", xlab = "Ano de assinatura", ylab = "Número de paises", main = "Assinatura Acordo de Paris")
ndc<-tab1(ndc$ndc_1_submission,  sort.group = "decreasing", xlab = "Ano de assinatura", ylab = "Número de paises", main = "Assinatura Acordo de Paris")
ndc<-tab1(ndc$ndc_1_submission, xlab = "Ano de assinatura", ylab = "Número de paises", main = "Assinatura Acordo de Paris")
ndc<-tab1(ndc$ndc_1_submission, xlab = "Ano de submissão", ylab = "Número de paises", main = "Submissão NDC")
ndc<-tab1(ndc$ndc_1_submission, sort.group = year, xlab = "Ano de submissão", ylab = "Número de paises", main = "Submissão NDC")
ndc<-tab1(ndc$ndc_1_submission)
ndc <- tab1(ndc$ndc_1_submission)
rm(ndc)
ndc <- read_excel("IGES+NDC+Database_v7.7 (1) - Copia.xlsx",
sheet = "NDC_Master_Sheet_TCCAna", col_types = c("text",
"text", "text", "numeric", "numeric",
"text", "text", "numeric", "numeric",
"text", "numeric", "numeric", "numeric",
"numeric", "numeric", "text", "text",
"text", "text", "text", "text", "text",
"text"))
ndc_1 <- tab1(ndc$ndc_1_submission, sort.group = year, xlab = "Ano de submissão", ylab = "Número de paises", main = "Submissão NDC")
ndc_1 <- tab1(ndc$ndc_1_submission, xlab = "Ano de submissão", ylab = "Número de paises", main = "Submissão NDC")
paris_2<-tab1(ndc$paris_ag_ratification_year,  xlab = "Ano de assinatura", ylab = "Número de paises", main = "Assinatura Acordo de Paris")
ndc_1 <- tab1(ndc$ndc_1_submission, xlab = "Ano de submissão", ylab = "Número de paises", main = "Submissão NDC")
paris_2<-tab1(ndc$paris_ag_ratification_year,  xlab = "Ano de assinatura", ylab = "Número de paises", main = "Assinatura Acordo de Paris")
paris_2<-tab1(ndc$paris_ag_ratification_year,  xlab = "Ano de assinatura", ylab = "Número de paises", main = "Ratificação Acordo de Paris")
ndc_1 <- tab1(ndc$ndc_1_submission, xlab = "Ano de submissão", ylab = "Número de paises", main = "Submissão NDC")
plot_grid(strip_chart, kyoto, paris, paris_2, ndc_1)
plot_grid(stripchart, kyoto, paris, paris_2, ndc_1)
plot_grid(kyoto, paris, paris_2, ndc_1)
kyoto <- tab1(ndc$kyoto_status, sort.group = "decreasing", xlab = "Status", ylab = "Número de paises", main = "Status- Protocolo de Kyoto")
paris <- tab1(ndc$paris_ag_status, sort.group = "decreasing", xlab = "Status", ylab = "Número de paises", main = "Status- Acordo de Paris")
paris_2<-tab1(ndc$paris_ag_ratification_year,  xlab = "Ano de assinatura", ylab = "Número de paises", main = "Ratificação Acordo de Paris")
ndc_1 <- tab1(ndc$ndc_1_submission, xlab = "Ano de submissão", ylab = "Número de paises", main = "Submissão NDC")
tipo_1 <- tab1(ndc$mitigation_type, xlab = "Ano de submissão", ylab = "Número de paises", main = "Submissão NDC")
ggplotly(
ggplot(ndc, color = region) +
geom_histogram() +
)
ggplotly(
ggplot(ndc, color = region) +
geom_histogram(ndc$mitigation_type)
)
ggplotly(
ggplot(ndc, aes(color = region)) +
geom_histogram(ndc$mitigation_type)
)
ggplotly(
ggplot(ndc, aes(color = region)) +
geom_histogram(mitigation_type)
)
ggplotly(
ggplot(ndc, aes(mitigation_type, color = region)) +
geom_histogram()
)
ndc_2 <- tab1(ndc$mitigation_type, group(region), xlab = "Ano de submissão", ylab = "Número de paises", main = "Submissão NDC")
ndc%>%
ndc_2 <- tab1(ndc$mitigation_type, xlab = "Ano de submissão", ylab = "Número de paises", main = "Submissão NDC")
ndc%>%
ndc_2 <- tab1(ndc$mitigation_type, horiz = TRUE, xlab = "Ano de submissão", ylab = "Número de paises", main = "Submissão NDC")
ndc%>%
ndc_2 <- tab1(ndc$mitigation_type, horiz = TRUE, sort.group = "ascending", xlab = "Número de países", main = "Estrátegia de Mitigação")
ndc%>%
ndc_2 <- tab1(ndc$mitigation_type, horiz = TRUE, sort.group = "ascending", xlab = "Número de países", main = "Estrátegia de Mitigação")
ndc_2 <- tab1(ndc$mitigation_type, horiz = TRUE, sort.group = "ascending", xlab = "Número de países", main = "Estrátegia de Mitigação")
ndc_2 <- tab1(ndc$mitigation_type, horiz = TRUE, sort.group = "increasing", xlab = "Número de países", main = "Estrátegia de Mitigação")
ndc%>%
filter(mitigation_type="Carbon intensity reduction")%>%
tab1(ndc$country)
ndc%>%
filter(mitigation_type=="Carbon intensity reduction")%>%
tab1(ndc$country)
ndc%>%
filter(mitigation_type=="Carbon intensity reduction")
ndc%>%
filter(mitigation_type=="peak of carbon emissions")
ndc%>%
filter(mitigation_type=="Peak of carbon emissions")
ndc%>%
filter(country = "United States of America")
ndc%>%
filter(country == "United States of America")
View(ndc)
masterAB <- merge(d2019, ndc, by = "iso3")
summary(masterAB)
ggplotly(
ggplot(masterAB, aes(y= co2_emissions, color = mitigation_type))+
geom_point())
ggplotly(
ggplot(masterAB, aes(y= co2_emissions, color = mitigation_type))+
geom_point(size=1))
ggplot(masterAB, aes(y= co2_emissions, color = mitigation_type))
ggplotly(
ggplotly(
ggplot(masterAB, aes(x = pop_pop_million, y= co2_emissions, color = mitigation_type))+
geom_point())
ggplotly(
ggplotly(
ggplot(masterAB, aes(x = pop_pop_million, y= co2_emissions, color = mitigation_type))+
geom_point()
)
ggplotly(
ggplot(masterAB, aes(x = pop_pop_million, y= co2_emissions, color = mitigation_type))+
geom_point()+
facet_wrap(~region)
)
ggplotly(
ggplot(masterAB, aes(x = pop_pop_million, y= co2_emissions, color = mitigation_type))+
geom_point()+
facet_wrap(region)
)
ggplotly(
ggplot(masterAB, aes(x = pop_pop_million, y= co2_emissions, color = mitigation_type))+
geom_point()+
facet_wrap(region~)
ggplotly(
ggplot(masterAB, aes(x = pop_pop_million, y= co2_emissions, color = mitigation_type))+
geom_point()+
facet_wrap(~region)
)
ggplotly(
ggplot(masterAB, aes(x = pop_pop_million, y= co2_emissions, color = mitigation_type))+
geom_point()+
facet_wrap()
)
ggplotly(
ggplot(masterAB, aes(x = pop_pop_million, y= co2_emissions, color = mitigation_type))+
geom_point()+
facet_wrap(~region, ncol = 3)
)
ggplotly(
ggplot(masterAB, aes(x = pop_pop_million, y= co2_emissions, color = mitigation_type))+
geom_point()+
facet_wrap(~region, ncol = 3)
)
ggplot(masterAB, aes(x = pop_pop_million, y= co2_emissions, color = mitigation_type))+
geom_point()+
facet_wrap(~region, ncol = 3)
ggplot(masterAB, aes(x = pop_pop_million, y= co2_emissions, color = mitigation_type, size = region))+
geom_point()+
facet_wrap(~region, ncol = 3)
ggplot(masterAB, aes(x = pop_pop_million, y= co2_emissions, color = mitigation_type))+
geom_point()+
facet_grid(region)
ggplot(masterAB, aes(x = pop_pop_million, y= co2_emissions, color = mitigation_type))+
geom_point()+
facet_grid(masterAB, region)
View(masterAB)
ggplot(masterAB, aes(x = pop_pop_million, y= co2_emissions, color = mitigation_type))+
geom_point()+
facet_wrap(~region.x, ncol=3)
ggplot(masterAB, aes(x = pop_pop_million, y= co2_emissions, color = mitigation_type))+
geom_point()+
facet_grid(~region.x, ncol=3)
ggplot(masterAB, aes(x = pop_pop_million, y= co2_emissions, color = mitigation_type))+
geom_point()+
facet_grid(~region.x)
masterAB%>%
filter(region.x != "Asia")%>%
ggplot(aes(x = pop_pop_million, y= co2_emissions, color = mitigation_type))+
geom_point()+
facet_grid(~region.x)
masterAB%>%
filter(region.x != "Asia")%>%
ggplot(aes(x = pop_pop_million, y= co2_emissions, color = mitigation_type))+
geom_point()+
facet_wrap(~region.x)
masterAB%>%
filter(region.x != "Asia")%>%
ggplot(aes(x = pop_pop_million, y= co2_emissions, color = mitigation_type, shape = region.x))+
geom_point()+
facet_wrap(~region.x)
masterAB%>%
filter(region.x != "Asia")%>%
ggplot(aes(x = pop_pop_million, y= co2_emissions, color = mitigation_type, shape = region.x))+
geom_point()
ggplot(masterAB, aes(x = pop_pop_million, y= co2_emissions, color = mitigation_type, shape = region.x))+
geom_point()+
facet_wrap(~mitigation_type)
ggplot(masterAB, aes(x = pop_pop_million, y= co2_emissions, color = region.x))+
geom_point()+
facet_wrap(~mitigation_type)
ggplot(masterAB, aes(x = country, y= co2_emissions, color = region.x))+
geom_point()+
facet_wrap(~mitigation_type)
ggplot(masterAB, aes(x = country, y= co2_emissions, color = region.x))
View(masterAB)
